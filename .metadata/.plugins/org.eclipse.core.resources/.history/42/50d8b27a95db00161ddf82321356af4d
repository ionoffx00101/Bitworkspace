package Additional;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Random;

// 2017_01_16
// 테트리스 구현 1단계 (awt)
// rotate() 메서드 완성
// 왼쪽으로 이동 오른쪽으로 이동 시 정확한 검사 로직 추가
public class AwtTetrisController1
{

	private static final int BLOCK_WIDTH = 30;
	private static final int BLOCK_HEIGHT = 30;

	// AWT varables
	private Frame mainFrame;
	private Panel controlPanel;
	private Panel canvasPanel;
	private Canvas canvas;

	private int playerX = 4;
	private int playerY = 0;

	private byte[] playerBlocks = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 } };

	public AwtTetrisController1()
	{
		prepare();
		newBlocks();
	}

	private void prepare()
	{
		mainFrame = new Frame("Tetris");
		mainFrame.setSize(400, 800);
		mainFrame.setLayout(new BorderLayout());
		mainFrame.addWindowListener(new WindowAdapter()
		{
			public void windowClosing(WindowEvent we)
			{
				System.exit(0);
			}
		});

		canvas = new AwtCanvasTetris();
		controlPanel = new Panel();
		controlPanel.setLayout(new GridLayout(1, 1, 0, 0));
		canvasPanel.add(canvas);

	}

	public void newBlocks()
	{Random rand = new Random(System.currentTimeMillis());
	playerBockNum = rand.nextInt(AwtTetirsBlocks);

	// 블록으로부터 가져옴
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 4; j++)
		{
			playerBlocks[i][j] = AwtTetrisBlocks
		}
	}
	// 회전
	for (int j = 0; j < rand.nextInt(4); j++)
	{
		
	}
	}

	public void rotateBlocks()
	{

	}

	private void createButtons()
	{
		Button btnLeft = new Button();
		Button btnRight = new Button();
		Button btnDown = new Button();
		Button btnRotate = new Button();
		Button btnNext = new Button();

		btnLeft.addActionListener(new ActionListener()
		{

			@Override
			public void actionPerformed(ActionEvent e)
			{
			}
		});
		btnRight.addActionListener(new ActionListener()
		{

			@Override
			public void actionPerformed(ActionEvent e)
			{
			}
		});
		btnNext.addActionListener(new ActionListener()
		{

			@Override
			public void actionPerformed(ActionEvent e)
			{
			}
		});

		controlPanel.add(btnLeft);
		controlPanel.add(btnRight);
		controlPanel.add(btnLeft);
		controlPanel.add(btnLeft);
		controlPanel.add(btnLeft);

		mainFrame.setVisible(true);
	}

	class AwtCanvasTetris extends Canvas
	{public AwtCanvasTetris(){
		setBackground(Color.DARK_GRAY);
	}
	public void paint(Graphics g){
		Graphics2D g2d ;
		g2d =(Graphics2D) g;
		g2d.setColor(Color.WHITE);
		
	}
	}

	public static void main(String[] args)
	{
		AwtCanvasTetris = new AwtCanvasTetris();
	}

}
