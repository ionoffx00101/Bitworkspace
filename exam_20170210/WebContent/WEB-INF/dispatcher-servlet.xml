<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:tx="http://www.springframework.org/schema/tx"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/data/jpa 
	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
	
	<!-- 서블렛에 필요한 객체들을 스프링이 자동 생성하는 스프링 MVC 사용하도록 설정 -->
	 <mvc:annotation-driven/>
    <!--  com.bitacademy 패키지에서  jpaRepository 객체(DAO의 소스코드를 자동으로 만들어 주는)를 사용할 것임 -->
	<jpa:repositories base-package="com.bitacademy" />
    <!-- 어노테이션 사용 설정 -->
    <tx:annotation-driven/>
    <!-- com.bitacademy 패키지의 클래스들에 설정된 어노테이션 (@) 
         들을 읽어서 기억하고 있어라 설정
     -->
    <context:component-scan base-package="com.bitacademy"/>
    <!-- 서블렛을 사용가능하게 설정 -->
    <mvc:default-servlet-handler/>
    
     <!-- 데이터 베이스 연결 설정 -->
   	<bean id="dataSource" 
   	class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:XE"/>
        <property name="username" value="scott"/>
        <property name="password" value="tiger"/>
    </bean>
    <!-- EntityManager객체를 생성하는 EntityManagerFactory 객체를 자동 생성하도록 설정 -->
    <bean id="entityManagerFactory" 
    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.bitacademy"/> <!-- @Entity 탐색 시작 위치 -->
        <property name="jpaVendorAdapter">
            <!-- 하이버네이트 구현체 사용 -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties"> <!-- 하이버네이트 상세 설정 -->
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop> <!-- 방언 -->
                <prop key="hibernate.show_sql">true</prop>                   <!-- SQL 보기 -->
                <prop key="hibernate.format_sql">true</prop>                 <!-- SQL 정렬해서 보기 -->
                <prop key="hibernate.use_sql_comments">true</prop>           <!-- SQL 코멘트 보기 -->
                
               
            </props>
        </property>
    </bean>
    <mvc:interceptors>
    	<!-- EntityManager 객체 (jpa에서 쿼리를 실행하는 객체) 를 스프링이 자동 생성하도록 설정 -->
        <bean class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
            <property name="entityManagerFactory" ref="entityManagerFactory" />
        </bean>
    </mvc:interceptors>
    <tx:annotation-driven/>

	<!--  롤백 커밋을 처리하는 TransactionManager 객체도 스프링이 자동 생성하도록 설정 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- JPA 예외를 스프링 예외로 변환 해서 화면으로 전송하도록설정-->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <!-- DeptDAO를 deptDAO라는 이름의 bean객체로 만듬 -->
    <bean id="deptDAO" class="com.bitacademy.professor.DeptDAO">
    
    </bean>
    
    <!-- ProfessorDAO클래스를 profDAO라는 이름의 bean객체로 만듬 -->
    <bean id="profDAO" class="com.bitacademy.professor.ProfessorDAO">
    </bean>
</beans>



